//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Settings/Input/InputProfile.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputProfile: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputProfile()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputProfile"",
    ""maps"": [
        {
            ""name"": ""Map"",
            ""id"": ""d0519041-a0f5-4433-9ec3-95df1acd1094"",
            ""actions"": [
                {
                    ""name"": ""LeftDirectional"",
                    ""type"": ""Value"",
                    ""id"": ""6cdd0f23-1e7e-4f2f-afce-bc8de664e175"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightDirectional"",
                    ""type"": ""Value"",
                    ""id"": ""20131e66-805e-4783-8a7a-72ae1bf79bcb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FirstContextualButton"",
                    ""type"": ""Button"",
                    ""id"": ""d5f5aa6a-3d42-46da-bf3b-6b57191d5fea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondContextualButton"",
                    ""type"": ""Button"",
                    ""id"": ""b2721c09-7956-474f-be48-4aecaa082636"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""39b275bc-55b3-4263-a472-246e7a952361"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9fe82dfd-61ff-4162-81df-d712feb226b5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ee063168-5fe8-483a-8fe7-d4d9cbc0b2d0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c2f5f63a-ac39-439e-b8eb-9294b15a1580"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3676c95d-14d0-4189-8eb9-55f11d0cc4b3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""PS4"",
                    ""id"": ""522c21ee-5f11-4dbf-afb1-c66c9de0ddae"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""74d694e9-01ec-4888-9a92-8c7de8de3b8f"",
                    ""path"": ""<DualShockGamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""32b89140-b959-4a21-8b66-d43420ec9477"",
                    ""path"": ""<DualShockGamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f58d908c-8070-4d34-b01b-04a3013f0bde"",
                    ""path"": ""<DualShockGamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""aaabba4e-90f3-48ad-a2e5-fb55ef77bbb4"",
                    ""path"": ""<DualShockGamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c8e03e9f-bbdf-42c2-89fc-f789b471d656"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstContextualButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00881861-2115-4919-b2d3-7abb031fb40c"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstContextualButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d952e494-f77e-4ac5-aedb-8360c25bca3e"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondContextualButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31cb43fe-a2f3-46a2-bc9b-a150184f1eb8"",
                    ""path"": ""<DualShockGamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondContextualButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""56d57aa2-5fed-493d-93d0-a6eea0173e12"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""66e79ddf-0842-4f8d-a2cd-26c568e87c73"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f343889a-cd89-4c4e-9689-6d8d1bc7098a"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""90bda264-919e-4f54-a11b-4fcf0fdb427e"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6c47a48c-9304-4e78-9dcc-7926a2724cb9"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""PS4"",
                    ""id"": ""8b393f2b-bb06-4ae5-95ef-429842c18bc7"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""224b26d8-e88e-4aeb-abad-26f4c40d1801"",
                    ""path"": ""<DualShockGamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""def1fe97-4dfd-45ad-bbad-de6b9ef99909"",
                    ""path"": ""<DualShockGamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""34fb964e-ce8f-4499-8410-84e1dc598d5f"",
                    ""path"": ""<DualShockGamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fd6ece00-2399-44f6-8875-6ee3d53596b6"",
                    ""path"": ""<DualShockGamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightDirectional"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Map
        m_Map = asset.FindActionMap("Map", throwIfNotFound: true);
        m_Map_LeftDirectional = m_Map.FindAction("LeftDirectional", throwIfNotFound: true);
        m_Map_RightDirectional = m_Map.FindAction("RightDirectional", throwIfNotFound: true);
        m_Map_FirstContextualButton = m_Map.FindAction("FirstContextualButton", throwIfNotFound: true);
        m_Map_SecondContextualButton = m_Map.FindAction("SecondContextualButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Map
    private readonly InputActionMap m_Map;
    private List<IMapActions> m_MapActionsCallbackInterfaces = new List<IMapActions>();
    private readonly InputAction m_Map_LeftDirectional;
    private readonly InputAction m_Map_RightDirectional;
    private readonly InputAction m_Map_FirstContextualButton;
    private readonly InputAction m_Map_SecondContextualButton;
    public struct MapActions
    {
        private @InputProfile m_Wrapper;
        public MapActions(@InputProfile wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftDirectional => m_Wrapper.m_Map_LeftDirectional;
        public InputAction @RightDirectional => m_Wrapper.m_Map_RightDirectional;
        public InputAction @FirstContextualButton => m_Wrapper.m_Map_FirstContextualButton;
        public InputAction @SecondContextualButton => m_Wrapper.m_Map_SecondContextualButton;
        public InputActionMap Get() { return m_Wrapper.m_Map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MapActions set) { return set.Get(); }
        public void AddCallbacks(IMapActions instance)
        {
            if (instance == null || m_Wrapper.m_MapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MapActionsCallbackInterfaces.Add(instance);
            @LeftDirectional.started += instance.OnLeftDirectional;
            @LeftDirectional.performed += instance.OnLeftDirectional;
            @LeftDirectional.canceled += instance.OnLeftDirectional;
            @RightDirectional.started += instance.OnRightDirectional;
            @RightDirectional.performed += instance.OnRightDirectional;
            @RightDirectional.canceled += instance.OnRightDirectional;
            @FirstContextualButton.started += instance.OnFirstContextualButton;
            @FirstContextualButton.performed += instance.OnFirstContextualButton;
            @FirstContextualButton.canceled += instance.OnFirstContextualButton;
            @SecondContextualButton.started += instance.OnSecondContextualButton;
            @SecondContextualButton.performed += instance.OnSecondContextualButton;
            @SecondContextualButton.canceled += instance.OnSecondContextualButton;
        }

        private void UnregisterCallbacks(IMapActions instance)
        {
            @LeftDirectional.started -= instance.OnLeftDirectional;
            @LeftDirectional.performed -= instance.OnLeftDirectional;
            @LeftDirectional.canceled -= instance.OnLeftDirectional;
            @RightDirectional.started -= instance.OnRightDirectional;
            @RightDirectional.performed -= instance.OnRightDirectional;
            @RightDirectional.canceled -= instance.OnRightDirectional;
            @FirstContextualButton.started -= instance.OnFirstContextualButton;
            @FirstContextualButton.performed -= instance.OnFirstContextualButton;
            @FirstContextualButton.canceled -= instance.OnFirstContextualButton;
            @SecondContextualButton.started -= instance.OnSecondContextualButton;
            @SecondContextualButton.performed -= instance.OnSecondContextualButton;
            @SecondContextualButton.canceled -= instance.OnSecondContextualButton;
        }

        public void RemoveCallbacks(IMapActions instance)
        {
            if (m_Wrapper.m_MapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMapActions instance)
        {
            foreach (var item in m_Wrapper.m_MapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MapActions @Map => new MapActions(this);
    public interface IMapActions
    {
        void OnLeftDirectional(InputAction.CallbackContext context);
        void OnRightDirectional(InputAction.CallbackContext context);
        void OnFirstContextualButton(InputAction.CallbackContext context);
        void OnSecondContextualButton(InputAction.CallbackContext context);
    }
}
